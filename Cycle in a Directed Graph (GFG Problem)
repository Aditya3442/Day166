class Solution {
    public boolean isCheck(int x , int[] visited , int[] pathVisited , ArrayList<ArrayList<Integer>> adj){
        visited[x] = 1;
        pathVisited[x] = 1;
        for(int i : adj.get(x)){
            if(visited[i] == 0){
                if(isCheck(i , visited , pathVisited , adj) == true){
                   return true;   
                }
            }
            else if(pathVisited[i] == 1){
                return true;   
            }
        }
        pathVisited[x] = 0;
        return false;
    }
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // code here
        int visited[] = new int[V];
        int pathVisited[] = new int[V];
        for(int i = 0 ; i < V ; i++){
            if(visited[i] == 0){
                if(isCheck(i , visited , pathVisited , adj) == true)
                  return true;
            }
        }
        return false;
    }
}
